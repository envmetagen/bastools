.libPaths()
library()
library(ROBITaxonomy)
library(ROBITaxonomy)
library(ROBITaxonomy)
library(ROBITaxonomy)
library(ROBITaxonomy)
R CMD build RobiTaxonomy
library(ROBITaxonomy)
library("ROBIUtils", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library(ROBITaxonomy)
install.packages("igraph")
install.packages("XML")
ncbi_folder<-getwd()
stringr::str_subset(string = ncbi_folder,pattern = "/" )
?str_subset
stringr::str_locate_all(string = ncbi_folder,pattern = "/" )
?substr
substr(ncbi_folder,55,65)
substr(ncbi_folder,55+1,65-1)
b<-stringr::str_locate_all(string = a,pattern = "/" )
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
c<-b[,1]
c<-b[1]
c<-b[[1]]
c
c[1]
c[,1]
c<-b[[1]][,1]
c
length(a)
str_length(a)
stringr::str_length(a)
c[3]
c[length(c)]
substr(a,d[length(d)]+1,str_length(a))
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
substr(a,d[length(d)]+1,str_length(a))
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
str_length(a)
d[length(d)]
a<-getwd()
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
str_length(a)
stringr::str_length(a)
d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
substr(a,d[length(d)]+1,str_length(a))
}
if(stringr::str_length(a)>d[length(d)]){
substr(a,d[length(d)]+1,stringr::str_length(a))
}
d[length(d)-1]
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
stringr::str_length(a)
d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)=d[length(d)]){
substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
stringr::str_length(a)
d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
a
a<-c(a,"/")
a
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c("-t",d,"-d",out),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/",new_obitaxonomy)
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
substr(a,d[length(d)]+1,stringr::str_length(a)
)
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c("-t",e,"-d",out),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c("-t ",e,"-d",out),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
args=c("-t ",e,"-d",out)
args=c("-t ",e,"-d","new_obitaxonomy")
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c("-t ",e,"-d ",out),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c("-t ",e," -d ",out),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c(" -t ",e," -d ",out),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
NCBItaxonomy2obitaxonomy<-function(path,out){
if(path!="here"){setwd(path)}
a<-getwd()
b<-stringr::str_locate_all(string = a,pattern = "/" )
d<-b[[1]][,1]
#stringr::str_length(a)
#d[length(d)]
if(stringr::str_length(a)>d[length(d)]){
e<-substr(a,d[length(d)]+1,stringr::str_length(a))
}
if(stringr::str_length(a)==d[length(d)]){
e<-substr(a,d[length(d)-1]+1,d[length(d)]-1)
}
cb <- function(line, proc) {cat(line, "\n")}
processx::run(command = "obitaxonomy",
args=c(" -t ",e," -d ","out"),echo=T,stderr_line_callback = cb)
}
NCBItaxonomy2obitaxonomy("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/TAXONOMIES/","new_obitaxonomy")
processx::run(command = "obitaxonomy", args=c("-t ","TAXONOMIES"," -d ","out"),echo=T)
?run
processx::run(command = "obitaxonomy", args=c("-t ","TAXONOMIES"," -d ","out"),echo=T,echo_cmd = T)
blast2rma.BAS("B2.wPrimers.blast.tab",outfile = "B2.wPrimers.blast.R.rma6",mrc = 85.0,
a2t = "/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/megan/nucl_acc2tax-Nov2018.abin", reads="B2.wPrimers.fasta")
library("bastools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
blast2rma.BAS("B2.wPrimers.blast.tab",outfile = "B2.wPrimers.blast.R.rma6",mrc = 85.0,
a2t = "/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/megan/nucl_acc2tax-Nov2018.abin", reads="B2.wPrimers.fasta")
processx::run(command = "obitaxonomy", args=c(" -t ",e," -d ",e),echo=T,echo_cmd = T)
setwd("/media/sf_Documents/WORK/CIBIO/STATS_AND_CODE/")
processx::run(command = "obitaxonomy", args=c(" -t ",e," -d ",e),echo=T,echo_cmd = T)
format="BlastTab"
processx::run(command = "obitaxonomy", args=c(),echo=T,echo_cmd = T)
processx::run(command = "obitaxonomy", args=c(""),echo=T,echo_cmd = T)
processx::run(command = "obitaxonomy", args=c("-help"),echo=T,echo_cmd = T)
processx::run(command = "obitaxonomy", args=c("-h"),echo=T,echo_cmd = T)
processx::run(command = "obitaxonomy",echo=T,echo_cmd = T)
processx::run(command = "obitools",echo=T,echo_cmd = T)
detach(".Rdata")
processx::run(command = "obitaxonomy",args=c(" -h "),echo=T,stderr_line_callback = cb,echo_cmd = T)
processx::run(command = "obitaxonomy",args=c(" -h "),echo=T,echo_cmd = T)
processx::run(command = "ls",args=c(" -lh "),echo=T,echo_cmd = T)
processx::run(command = "ls",args=c(" -lh "," * "),echo=T,echo_cmd = T)
processx::run(command = "ls",echo=T,echo_cmd = T)
2.5e per plate 200 plates
2.5*200
processx::run(command = "ls",args=c("-lrth),echo=T,echo_cmd = T)
)
processx::run(command = "ls",args=c("-lrth"),echo=T,echo_cmd = T)
processx::run(command = "obitaxonomy",args=c("-h"),echo=T,echo_cmd = T)
processx::run(command = "/home/tutorial/SCRIPTS/MBC_pipelines/MBC/bin/obitaxonomy",args=c("-h"),echo=T,echo_cmd = T)
system(command = "rma2info -h")
args=c("rma2info","-h")
system(command = args)
now="rma2info"
args=c(now,"-h")
system(command = args)
?system
argsBas=c("blast2rma","-h")
system(command = argsBAS, wait=T echo = T)}
system(command = argsBAS, wait=T)
argsBas=c("blast2rma","-h")
system(command = argsBAS, wait=T)
system(command = argsBas, wait=T)
argsBas<-c(" --in ", infile," --format",format," --blastMode ",blastMode,
" --reads ", reads," --out ",outfile," --topPercent ",top," -mdf ",mdf," -ms ",ms,
" -me ",me," -mrc ",mrc," -ram ",ram," -a2t ",a2t," -supp ",0)
processx::run(command = "/home/tutorial/SCRIPTS/MBC_pipelines/MBC/bin/obitaxonomy",args=c("-h"),echo=T,echo_cmd = T)
processx::run(command = "obitail",args=c("-h"),echo=T,echo_cmd = T)
processx::run(command = "obihead",args=c("-h"),echo=T,echo_cmd = T)
system(command="obihead")
system(command="obihead -h")
system("echo $PATH")
system("echo $PATH")
system("cat ~/.profile")
library(ROBITaxonomy)
library(ROBITaxonomy)
library(ROBITaxonomy)
library(ROBITaxonomy)
detach("package:ROBITaxonomy", unload=TRUE)
