{
    "collab_server" : "",
    "contents" : "setwd(\"C:/Users/basti/Documents/WORK/CIBIO/STATS_AND_CODE/OBITOOLS/ecoPCRoutput/USING 16S/\")\n\nlibrary(ROBIBarcodes)\nlibrary(ROBITaxonomy)\nlibrary(ROBITools)\nlibrary(ROBIUtils)\n\necopcroutput=read.ecopcr.result(\"FROG31_SINGLETAXID_DB.ecopcroutput\")\n#really need to make sure this file is good before proceeding\n\n#Define Primers THAT YOU USED FOR ECOPCROUTPUT AND ECOPCRDB used (tab format)\nFROGFORWARD<-\"GACCCYATGGARCTTWARAC\"\nFROGREVERSE<-\"TARCTTGGTYCGTTGATCA\"\nECOPCRDB<-\"SINGLETAXID_DB_ALLFROGS_16S.tab\"\n\ntaxo=read.taxonomy(\"taxdump\")\n\n#compare ORIGINAL DATABASE with ecoPCR output\nlibrary(data.table)\noriginal.frame<-fread(file = ECOPCRDB,header = TRUE,sep = \"\\t\",select = \"taxid\")\noriginal.frame<-as.data.frame(original.frame)\n\nspecies.frame<-as.data.frame(ecopcroutput$species)\nspecies.frame$species=species.frame$\"ecopcroutput$species\"\nspecies.frame$\"ecopcroutput$species\"=NULL\n\nIndex=which(original.frame$taxid%in%species.frame$species)\necopcrhits=array(0,dim = nrow(original.frame))\necopcrhits[Index]=1\noriginal.frame$ecopcrhits=ecopcrhits\noriginal.taxonatrank.kingdom<-taxonatrank(taxo, original.frame$taxid,\"kingdom\",TRUE)\noriginal.frame$kingdom=original.taxonatrank.kingdom\noriginal.taxonatrank.phylum<-taxonatrank(taxo, original.frame$taxid,\"phylum\",TRUE)\noriginal.frame$phylum=original.taxonatrank.phylum\noriginal.taxonatrank.class<-taxonatrank(taxo, original.frame$taxid,\"class\",TRUE)\noriginal.frame$class=original.taxonatrank.class\noriginal.taxonatrank.order<-taxonatrank(taxo, original.frame$taxid,\"order\",TRUE)\noriginal.frame$order=original.taxonatrank.order\noriginal.taxonatrank.family<-taxonatrank(taxo, original.frame$taxid,\"family\",TRUE)\noriginal.frame$family=original.taxonatrank.family\noriginal.taxonatrank.genus<-taxonatrank(taxo, original.frame$taxid,\"genus\",TRUE)\noriginal.frame$genus=original.taxonatrank.genus\noriginal.taxonatrank.species<-taxonatrank(taxo, original.frame$taxid,\"species\",TRUE)\noriginal.frame$species=original.taxonatrank.species\n\n#Focus on frogs (plot with proportion hits)\n#mar=c(bottom, left, top, right)\npar(mar = c(10,4,4,2) + 0.1)\npar(bg=\"transparent\")\nanura.only.table=original.frame[original.frame$order%in%\"Anura\",]\nstacked.table.anura=table(anura.only.table$ecopcrhits,anura.only.table$family)\nstacked.plot.anura=barplot(table(anura.only.table$ecopcrhits,anura.only.table$family),\n                           col=c(\"gray35\",\"gray69\"), las=2, \n                           ylim= c(0,max(colSums(stacked.table.anura)+100)))\ntext.pc.hits.anura=round((stacked.table.anura[2,]/colSums(stacked.table.anura))*100,digits = 0)\nxcoords.anura=stacked.plot.anura\nycoords.anura=stacked.table.anura[2,]+stacked.table.anura[1,]\ntext(x =xcoords.anura, y = ycoords.anura,  label = text.pc.hits.anura, pos = 3, cex = 0.8, col = \"black\")\nmtext(\"No. of species in Anura Database\", side=2, line=2.8, cex = 1.5)\nlegend(\"topright\", legend = c(\"Amplified in silico\", \"Not amplified in silico\"), \n       fill = c(\"gray35\", \"gray69\"), bty = \"n\")\n\n#primer logo plot\nfrog.forward=ecopcr.forward.shanon(ecopcroutput)\nfrog.reverse=ecopcr.reverse.shanon(ecopcroutput)\npar(mfcol=c(2,2))\ndnalogoplot(frog.forward, primer = FROGFORWARD, main='Forward frog')\ndnalogoplot(frog.reverse, primer = FROGREVERSE, main='Reverse frog')\n\n#taxonomic resolution\nis_a_frog=is.subcladeof(taxo,ecopcroutput$species,8342)\nonly.frog=ecopcroutput[is_a_frog,]\nresAnura = resolution(taxo,only.frog)\nresolutionAnura = with(only.frog,unique(data.frame(species_name,taxid,rank=resAnura)))\nresAnuraTable<-t(t(sort(table(resolutionAnura$rank)/length(resolutionAnura$rank),decreasing = TRUE)))\nresAnuraTable\n\n#To explore hits by species etc. \nget.classic.taxonomy.BAS = function(x, taxo) {\n  \n  classic.taxo = c(\"kingdom\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\")\n  \n  taxids = x$taxid\n  \n  out = as.data.frame(do.call(\"cbind\", lapply(classic.taxo, function(y) {\n    scientificname(taxo, taxonatrank(taxo,taxids,y))\n  })))\n  \n  colnames(out) = paste(classic.taxo, \"_name_ok\", sep=\"\")\n  rownames(out) = row.names(x)\n  \n  out$scientific_name_ok = scientificname(taxo, taxids)\n  out$taxonomic_rank_ok = taxonomicrank(taxo, taxids)\n  \n  return(out)\n}\nspecies.frame$taxid<-species.frame$species\ntaxon.table=get.classic.taxonomy.BAS(species.frame,taxo)\n\n\n\n\n",
    "created" : 1517925146759.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1582415034",
    "id" : "82D7DAB0",
    "lastKnownWriteTime" : 3275086901145980505,
    "last_content_update" : 1517925352405,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}